% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_inits02_lctmc.R
\name{gen_inits02_lctmc}
\alias{gen_inits02_lctmc}
\alias{gen_inits02_lctmc_2x2}
\alias{gen_inits02_lctmc_3x3}
\title{Step 2/2 for generating initial value for model fitting}
\usage{
gen_inits02_lctmc_2x2(
  step2_inits,
  df,
  Xmat,
  Wmat,
  dt,
  K,
  par_constraint,
  parallel_optim
)

gen_inits02_lctmc_3x3(
  step2_inits,
  df,
  Xmat,
  Wmat,
  dt,
  K,
  par_constraint,
  parallel_optim
)
}
\arguments{
\item{step2_inits}{a named numeric vector. This should be a vector of  model parameters. \cr
The names of the vector should be parameters names and the values are the initial value for direct likelihood optimization}

\item{df}{a data frame object containing row-wise transition data as binary variables. \cr
For example, if \code{trans.2_1} equals 1 then it means the observation was a transition from stage 2 to stage 1 within \code{dt} amount of time.}

\item{Xmat}{a matrix object housing the covariates that affect the CTMC portion of the model. \cr
This matrix should have the same number of rows as the data frame object, \code{data}}

\item{Wmat}{a matrix object housing the covariates that affect the latent classification part of the model. \cr
This matrix should have number of rows equal to unique number of individuals in the data frame object, \code{data}}

\item{dt}{a numeric vector housing the length of time interval between observations. This vector's length should be equal to number of rows in the data frame object, \code{data}}

\item{K}{the number of categories the latent class variable has}

\item{par_constraint}{a named numeric vector to indicate which parameter is constrained. Set equal to NULL for unconstrained model. \cr
For example, \code{c(alpha1.1 = 0)} constraints the parameter 'alpha1.1' to be a constant 0. \strong{NOTE:} Current version of the code will \emph{only} work with constrains equal to 0.}

\item{parallel_optim}{a list object telling the function whether parallel process should be used for the Step 2 of the initial value generation. \cr
The list should contain \strong{two} elements: \cr
(1) \code{run} a logical scalar, if TRUE then this function will use parallel processing. If FALSE, then the \code{cl} argument is ignored. \cr
(2) \code{cl} is an object obtained from the \code{parallel} package, for example \cr \code{cl = parallel::makeCluster(spec = 2)}}
}
\value{
a named numeric vector. This is the vector of model parameters that maximizes the observed data log-likelihood function (see \strong{Note} section).
}
\description{
Performs step 2 of the initial value generation. This is a direct optimization on the observed data likelihood function.
We condition on the number of latent clusters and sum over joint probability between the observed data and the unobserved data. \cr
That is,
\deqn{
  P(Y_{i}) = \sum_{k=1}^{K} P(Y_{i} \cap Z_{i}=k)
}
See \strong{Note} section for more info.
}
\note{
This is the third step out of six of fitting a latent class CTMC model (i.e., generate initial values via direct optimization). \cr\cr
This step is equivalent to obtaining the MLE. It performs numerical optimization on the observed data log likelihood function:
\deqn{
  log(P(Y)) = \sum_{i} log(P(Y_{i}))
}
where
\deqn{
  P(Y_{i}) = \sum_{k} P(Y_{i}=y_{i} \cap Z_{i}=k)
}
and the summand could be simplified as:
\deqn{
  P(Y_{i} \cap Z_{i}) = P(Z_{i}) \cdot P(Y_{i} | Z_{i})
}
}
\examples{
## TO BE ADDED ##
}
