% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trace_algorithm_progress.R
\name{trace_lctmc_progress}
\alias{trace_lctmc_progress}
\title{Trace algorithm progress}
\usage{
trace_lctmc_progress(
  width = 100L,
  section = c("header1", "header2", "tail1", "tail2"),
  type = c("format", "init1", "init2", "em", "se", "rescale"),
  ref_t = Sys.time(),
  MyModelName = ""
)
}
\arguments{
\item{width}{an integer scalar. Use this to indicate output message width. Minimum width is 100. \cr
If any thing less than 100 is specified then function will automatically default it to \code{100L}.}

\item{section}{a character scalar. If 'header1' then \code{MyModelName} is printed. If equals to 'header2' then the output message depends on \code{type}. \cr
If 'tail1' then prints the closing message depending on \code{type}. If 'tail2' then prints the time stamp comparing to the argument \code{ref_t}}

\item{type}{a character scalar. when \code{section} is equal to 'header2' this argument is used to decide the type of message that is printed. \cr
Ignored if \code{section} is equal to 'header1'}

\item{ref_t}{a scalar time object obtained from \code{Sys.time()}.}

\item{MyModelName}{a character scalar. This will be used when \code{section} is equal to 'header1'}
}
\value{
NULL. \cr
This function prints messages and outputs NULL
}
\description{
Trace algorithm progress by printing section titles
}
\note{
This function is usually called within the \code{\link[=lctmc_2x2]{lctmc_2x2()}} or \code{\link[=lctmc_3x3]{lctmc_3x3()}} function
}
\examples{
# width = 120
{
  LCTMC:::trace_lctmc_progress(width = 120L,
                               section = 'header1', type = "format",
                               MyModelName = "ABCDEF")
  LCTMC:::trace_lctmc_progress(width = 120L,
                               section = 'header2', type = "format",
                               MyModelName = "ABCDEF")
}

# width = 100
{
  LCTMC:::trace_lctmc_progress(width = 100L,
                               section = 'header1', type = "format",
                               MyModelName = "Hello World !!")
  LCTMC:::trace_lctmc_progress(width = 100L,
                               section = 'header2', type = "init1",
                               MyModelName = "Hello World !!")
}

# an example with closing messages too
{
  xx = "Hellow World !!"
  tt = as.POSIXct(1, origin = "2022-10-15", tz = "UTC")

  LCTMC:::trace_lctmc_progress(width = 101L,
                               section = "header1", type = "format",
                               ref_t = tt,
                               MyModelName = xx)
  LCTMC:::trace_lctmc_progress(width = 101L,
                               section = "header2", type = "init2",
                               ref_t = tt,
                               MyModelName = xx)

  cat(" * some stuff here \n * xxx \n * yyy \n * wow \n")

  LCTMC:::trace_lctmc_progress(width = 101L,
                               section = "tail1", type = "rescale",
                               ref_t = tt,
                               MyModelName = xx)
  LCTMC:::trace_lctmc_progress(width = 101L,
                               section = "tail2", type = "rescale",
                               ref_t = tt,
                               MyModelName = xx)
}
}
\seealso{
\code{\link[=lctmc_2x2]{lctmc_2x2()}}; \code{\link[=lctmc_3x3]{lctmc_3x3()}}
}
