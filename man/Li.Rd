% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Li.R
\name{Li}
\alias{Li}
\alias{Li_2x2}
\alias{Li_3x3}
\title{Individual likelihood of the CTMC process}
\usage{
Li_2x2(P = data.frame(), data = data.frame())

Li_3x3(P = data.frame(), data = data.frame())
}
\arguments{
\item{P}{A data frame object containing the transition probabilities obtained from the \code{get_P} functions.}

\item{data}{A data frame object containing the binary transition indicator variables named as \code{trans.1_1}, \code{trans.1_2}, etc.
This data frame object can be obtained from \code{fmt_rowwise_trans()}}
}
\value{
A vector of likelihood/probability (i.e., numeric) values. Each element is the likelihood of each individual indicated by the \code{id} variable in \code{data}.
Length of output should be equal to number of unique IDs.
}
\description{
Computes the individual-level likelihood conditioned on the latent variable, \eqn{P(Y_{i} | Z_{i})}
}
\note{
This function does not need to depend on the number of latent classes because what we are computing is the likelihood conditioned on the given latent class. \cr

\deqn{
  L_{i} = \prod_{j}^{n_{i}} L_{ij}
}
where \eqn{L_{ij}} is the likelihood of the \eqn{j^{th}} transition of the person \eqn{i^{th}} person.
}
\examples{
# 2x2 case -------------
# generate P
q12 = q21 = c(1.1, 0.5, 0.1, 2.2, 0.3)
time_diffs = c(1, 2, 5.5, 8.1, 13.5)
my_P = LCTMC:::get_P_2x2(q12 = q12, q21 = q21, dt = time_diffs)

# generate data
my_ids = c(1,1,1, 2,2, 3,3,3)

c1 = c(0,1,1.5, 0,1, 0,2,5)
c2 = c(1,2,2, 1,1, 2,1,2)

x1 = c(rnorm(n = 3), rnorm(n = 2), rnorm(n = 3))
x2 = c(1,1,1, 0,0, 1,1,1)

w1 = c(rexp(n = 3, rate = 1), rexp(n = 2, rate = 1), rexp(n = 3, rate = 1))
w2 = c(rexp(n = 3, rate = 10), rexp(n = 2, rate = 10), rexp(n = 3, rate = 10))

my_df = data.frame(
  id = my_ids,
  obsTime = c1, state_at_obsTime = c2,
  x1 = x1, x2 = x2,
  w1 = w1, w2 = w2
)
my_df2 = LCTMC:::fmt_rowwise_trans(data = my_df, type = "2x2")

# use LCTMC:::Li_2x2()
LCTMC:::Li_2x2(P = my_P, data = my_df2)


# - # - # - # - # - # - # - # - # - # - # - # - # - # - #
# - # - # - # - # - # - # - # - # - # - # - # - # - # - #


# 3x3 case -------------
# generate P
q12 = q21 = q23 = c(1.1, 0.5, 0.1, 2.2, 0.3)
time_diffs = c(1, 2, 5.5, 8.1, 13.5)

my_P = LCTMC:::get_P_3x3(q12 = q12, q21 = q21, q23 = q23, dt = time_diffs)

# generate data
my_ids = c(1,1,1, 2,2, 3,3,3)

c1 = c(0,1,1.5, 0,1, 0,2,5)
c2 = c(1,2,3, 1,1, 1,2,3)

x1 = c(rnorm(n = 3), rnorm(n = 2), rnorm(n = 3))
x2 = c(1,1,1, 0,0, 1,1,1)

w1 = c(rexp(n = 3, rate = 1), rexp(n = 2, rate = 1), rexp(n = 3, rate = 1))
w2 = c(rexp(n = 3, rate = 10), rexp(n = 2, rate = 10), rexp(n = 3, rate = 10))

my_df = data.frame(
  id = my_ids,
  obsTime = c1, state_at_obsTime = c2,
  x1 = x1, x2 = x2,
  w1 = w1, w2 = w2
)
my_df2 = LCTMC:::fmt_rowwise_trans(data = my_df, type = "3x3")

# use Li_3x3()
LCTMC:::Li_3x3(P = my_P, data = my_df2)
}
\seealso{
\code{\link[=get_P_2x2]{get_P_2x2()}}; \code{\link[=bik_all_2x2]{bik_all_2x2()}}, \code{\link[=fmt_rowwise_trans]{fmt_rowwise_trans()}}
}
